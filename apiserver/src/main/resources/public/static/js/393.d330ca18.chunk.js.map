{"version":3,"file":"static/js/393.d330ca18.chunk.js","mappings":"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","sources":["components/products/ListComponent.js","pages/products/ListPage.js","components/common/PageComponent.js","components/common/FetchingModal.js","hooks/useCustomMove.js","api/productsAPI.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport useCustomMove from '../../hooks/useCustomMove';\r\nimport { getList } from '../../api/productsAPI';\r\nimport FetchingModal from '../common/FetchingModal';\r\nimport { API_SERVER_HOST } from '../../api/todoAPI';\r\nimport PageComponent from '../common/PageComponent';\r\n\r\nconst initState = {\r\n    dtoList: [],\r\n    pageNumList: [],\r\n    pageRequestDTO: [],\r\n    prev: false,\r\n    next: false,\r\n    totalCount: 0,\r\n    prevPage: 0,\r\n    nextPage: 0,\r\n    totalPage: 0,\r\n    current: 0 // ÏÑúÎ≤ÑÏóêÏÑú 0Î∂ÄÌÑ∞ ÏãúÏûëÌïòÎäî Í≤ΩÏö∞ Î≥¥Ï†ï ÌïÑÏöî\r\n  };\r\n  const host = API_SERVER_HOST\r\n\r\nfunction ListComponent(props) {\r\n                                            //refresh : ÎèôÏùºÌïú ÌéòÏù¥ÏßÄ ÎàåÏóàÏùÑÎïå Í∞±Ïã†\r\n    const{moveToList, moveToRead, page, size, refresh} = useCustomMove()\r\n\r\n    const[serverData, setServerData] = useState(initState)\r\n\r\n    const[fetching, setFetching] = useState(false)\r\n    useEffect(() => {\r\n\r\n        setFetching(true)\r\n\r\n        getList({page, size}).then(data => {\r\n            console.log(\"üî• page Í∞í:\", page);\r\n            console.log(\"üî• current Í∞í:\", serverData.current);\r\n            setServerData({...data, current:page})\r\n            setFetching(false)\r\n        });\r\n\r\n    }, [page, size, refresh]);\r\n\r\n    return (\r\n \r\n        <div className=\"border-2 border-blue-100 mt-10 mr-2 ml-2\">\r\n        {fetching ? <FetchingModal /> : <></>}\r\n\r\n        <div className=\"flex flex-wrap mx-auto p-6\">\r\n            {serverData.dtoList.map(product => (\r\n            <div\r\n                key={product.pno}\r\n                className=\"w-1/3 p-1 rounded shadow-md border-2\"\r\n                onClick={() => moveToRead(product.pno)}\r\n            >\r\n                <div className=\"flex flex-col h-full\">\r\n                <div className=\"font-extrabold text-2xl p-2 w-full\">\r\n                    {product.pno}\r\n                </div>\r\n                \r\n                <div className=\"text-1xl m-1 p-2 w-full flex flex-col\">\r\n                    <div className=\"w-full overflow-hidden\">\r\n                    <img\r\n                        alt=\"product\"\r\n                        className=\"m-auto rounded-md w-60\"\r\n                        src={`${host}/api/products/view/s_${product.uploadedFileNames[0]}`}\r\n                    />\r\n                    </div>\r\n\r\n                    <div className=\"bottom-0 font-extrabold bg-white\">\r\n                    <div className=\"text-center p-1\">\r\n                        Ïù¥Î¶Ñ: {product.pname}\r\n                    </div>\r\n                    <div className=\"text-center p-1\">\r\n                        Í∞ÄÍ≤©: {product.price}\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            ))}\r\n        </div>\r\n        <PageComponent serverData={serverData} movePage={moveToList}></PageComponent>\r\n        </div> \r\n    );\r\n}\r\n\r\nexport default ListComponent;","import React from 'react';\r\nimport ListComponent from '../../components/products/ListComponent';\r\n\r\nfunction ListPage(props) {\r\n    return (\r\n        <div className='p-4 w-full bg-white'>\r\n            <div className='text-3xl font-extrabold'>\r\n                Products List Page\r\n            </div>\r\n\r\n            <ListComponent/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListPage;","import React from 'react';\r\n\r\n\r\n//ÌéòÏù¥ÏßÄ Ïû¨ÏÇ¨Ïö©\r\nfunction PageComponent({serverData, movePage}) {\r\n    \r\n\r\n    //serverData.prev, pageNumList, next, \r\n    return (\r\n\r\n        \r\n            <div className=\"m-6 flex justify-center\">\r\n            {serverData.prev ? \r\n                <button\r\n                className=\"m-2 p-2 w-16 text-center font-bold text-blue-400\"\r\n                onClick={() => movePage({ page: serverData.prevPage } )}>\r\n                Prev</button> : <></>}\r\n\r\n            {serverData.pageNumList.map(pageNum => \r\n                <button\r\n                    key={pageNum}\r\n                    className={`m-2 p-2 w-12 text-center rounded shadow-md text-white\r\n                    ${serverData.current === pageNum ? 'bg-gray-500' : 'bg-blue-400'}`}\r\n                    onClick={() => movePage({ page: pageNum })}>\r\n                {pageNum}\r\n                </button>\r\n            )}\r\n\r\n            {serverData.next ? \r\n                <button\r\n                    className=\"m-2 p-2 w-16 text-center font-bold text-blue-400\"\r\n                    onClick={() => movePage({ page: serverData.nextPage })}>\r\n                    Next\r\n                </button>:<></>}\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default PageComponent;","import React from 'react';\r\n\r\nfunction FetchingModal(props) {\r\n    return (\r\n        <div\r\n        className={`fixed top-0 left-0 z-[1055] flex h-full w-full place-items-center justify-center bg-black bg-opacity-20`}\r\n        >\r\n        <div\r\n            className=\"bg-white rounded-3xl opacity-100 min-w-min h-1/4 flex justify-center items-center\"\r\n        >\r\n            <div className=\"text-4xl font-extrabold text-orange-400 m-20\">\r\n            Loading.....\r\n            </div>\r\n        </div>\r\n        </div>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default FetchingModal;","import { useState } from \"react\"\r\nimport { createSearchParams, useNavigate, useSearchParams } from \"react-router-dom\"\r\n\r\nconst getNum = (param, defaultValue) => {\r\n\r\n    if(!param){\r\n        return defaultValue\r\n    }\r\n\r\n    return parseInt(param)\r\n\r\n}\r\n\r\n\r\n\r\nconst useCustomMove = () => {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [refresh, setRefresh] = useState(false)\r\n\r\n    const [queryParams] = useSearchParams()\r\n\r\n    const page = getNum(queryParams.get('page'), 1)\r\n    const size = getNum(queryParams.get('size'), 10)\r\n    \r\n    //page=3&size=10\r\n    const queryDefault = createSearchParams({page,size}).toString()\r\n\r\n    const moveToList = (pageParam) => {\r\n\r\n        let queryStr = \"\"\r\n        if(pageParam){\r\n            const pageNum = getNum(pageParam.page, 1)\r\n            const sizeNum = getNum(pageParam.size, 10)\r\n\r\n            queryStr = createSearchParams({page:pageNum, size:sizeNum}).toString()\r\n\r\n        }else{\r\n            queryStr = queryDefault\r\n        }\r\n        setRefresh(!refresh)\r\n        navigate({pathname:`../list`, search:queryStr})\r\n\r\n    }\r\n\r\n    const moveToModify = (tno) => {\r\n        navigate({\r\n            pathname:`../modify/${tno}`,\r\n            search:queryDefault\r\n        })\r\n    }\r\n\r\n    const moveToRead = (tno) => {\r\n        navigate({\r\n            pathname:`../read/${tno}`,\r\n            search:queryDefault\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return {moveToList, moveToModify, moveToRead, page, size, refresh}\r\n\r\n}\r\n\r\n\r\nexport default useCustomMove","import axios from \"axios\";\r\nimport { API_SERVER_HOST } from \"./todoAPI\";\r\n\r\n\r\nconst host = `${API_SERVER_HOST}/api/products`\r\n\r\nexport const postAdd = async (product) => {\r\n\r\n    const header = {headers: {'Content-Type':'multipart/form-data'}}\r\n    const res = await axios.post(`${host}/`, product, header)\r\n\r\n    return res.data\r\n\r\n}\r\n\r\nexport const getList = async(pageParam) => {\r\n\r\n    const {page, size} = pageParam\r\n    const res = await axios.get(`${host}/list`, {params: {page:page, size:size}})\r\n\r\n    return res.data\r\n}\r\n\r\nexport const getOne = async(pno) => {\r\n\r\n    const res = await axios.get(`${host}/${pno}`)\r\n    return res.data\r\n\r\n}\r\n\r\nexport const deleteOne = async(pno) => {\r\n    const res = await axios.delete(`${host}/${pno}`)\r\n    return res.data\r\n}\r\n\r\nexport const putOne = async(pno, product) => {\r\n    const header = {headers: {'Content-Type':'multipart/form-data'}}\r\n    const res = await axios.put(`${host}/${pno}`, product, header)\r\n    return res.data\r\n\r\n}\r\n"],"names":["initState","dtoList","pageNumList","pageRequestDTO","prev","next","totalCount","prevPage","nextPage","totalPage","current","host","API_SERVER_HOST","props","moveToList","moveToRead","page","size","refresh","useCustomMove","serverData","setServerData","useState","fetching","setFetching","useEffect","getList","then","data","console","log","_jsxs","className","children","_jsx","FetchingModal","_Fragment","map","product","onClick","pno","alt","src","uploadedFileNames","pname","price","PageComponent","movePage","ListComponent","_ref","pageNum","getNum","param","defaultValue","parseInt","navigate","useNavigate","setRefresh","queryParams","useSearchParams","get","queryDefault","createSearchParams","toString","pageParam","queryStr","sizeNum","pathname","search","moveToModify","tno","postAdd","async","axios","post","headers","params","getOne","deleteOne","delete","putOne","put"],"sourceRoot":""}