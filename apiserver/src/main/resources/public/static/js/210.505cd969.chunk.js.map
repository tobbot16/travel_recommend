{"version":3,"file":"static/js/210.505cd969.chunk.js","mappings":"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","sources":["components/common/PageComponent.js","components/todo/ListComponent.js","pages/todo/ListPage.js","hooks/useCustomMove.js"],"sourcesContent":["import React from 'react';\r\n\r\n\r\n//ÌéòÏù¥ÏßÄ Ïû¨ÏÇ¨Ïö©\r\nfunction PageComponent({serverData, movePage}) {\r\n    \r\n\r\n    //serverData.prev, pageNumList, next, \r\n    return (\r\n\r\n        \r\n            <div className=\"m-6 flex justify-center\">\r\n            {serverData.prev ? \r\n                <button\r\n                className=\"m-2 p-2 w-16 text-center font-bold text-blue-400\"\r\n                onClick={() => movePage({ page: serverData.prevPage } )}>\r\n                Prev</button> : <></>}\r\n\r\n            {serverData.pageNumList.map(pageNum => \r\n                <button\r\n                    key={pageNum}\r\n                    className={`m-2 p-2 w-12 text-center rounded shadow-md text-white\r\n                    ${serverData.current === pageNum ? 'bg-gray-500' : 'bg-blue-400'}`}\r\n                    onClick={() => movePage({ page: pageNum })}>\r\n                {pageNum}\r\n                </button>\r\n            )}\r\n\r\n            {serverData.next ? \r\n                <button\r\n                    className=\"m-2 p-2 w-16 text-center font-bold text-blue-400\"\r\n                    onClick={() => movePage({ page: serverData.nextPage })}>\r\n                    Next\r\n                </button>:<></>}\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default PageComponent;","import React, { useEffect, useState } from 'react';\r\nimport useCustomMove from '../../hooks/useCustomMove';\r\nimport { getList } from '../../api/todoAPI';\r\nimport PageComponent from '../common/PageComponent';\r\n\r\nconst initState = {\r\n  dtoList: [],\r\n  pageNumList: [],\r\n  pageRequestDTO: [],\r\n  prev: false,\r\n  next: false,\r\n  totalCount: 0,\r\n  prevPage: 0,\r\n  nextPage: 0,\r\n  totalPage: 0,\r\n  current: 0 // ÏÑúÎ≤ÑÏóêÏÑú 0Î∂ÄÌÑ∞ ÏãúÏûëÌïòÎäî Í≤ΩÏö∞ Î≥¥Ï†ï ÌïÑÏöî\r\n};\r\n\r\nfunction ListComponent(props) {\r\n  const { page, size, refresh, moveToList, moveToRead} = useCustomMove();\r\n  const [serverData, setServerData] = useState(initState);\r\n\r\n  useEffect(() => {\r\n    getList({ page, size }).then(data => {\r\n      console.log(\"üì¶ ÏÑúÎ≤ÑÏóêÏÑú Î∞õÏùÄ Îç∞Ïù¥ÌÑ∞:\", data);\r\n\r\n      // ‚úÖ current Í∞íÏùÑ 1Î∂ÄÌÑ∞ ÏãúÏûëÌïòÍ≤å Î≥¥Ï†ï\r\n      setServerData({\r\n        ...data,\r\n        current: page\r\n      });\r\n    });\r\n  }, [page, size, refresh]); //page, sizeÍ∞Ä Î≥ÄÌïòÏßÄ ÏïäÏúºÎ©¥ Îã§Ïãú ÌéòÏù¥ÏßÄÎ•º Ìò∏Ï∂úÌïòÏßÄ ÏïäÏùå\r\n\r\n  return (\r\n    <div className=\"border-2 border-blue-100 mt-10 mr-2 ml-2\">\r\n      {/* Î¶¨Ïä§Ìä∏ ÏòÅÏó≠ */}\r\n      <div className=\"flex flex-wrap mx-auto justify-center p-6\">\r\n        {serverData.dtoList.map(todo => (\r\n          <div\r\n            key={todo.tno}\r\n            className=\"w-full min-w-[400px] p-2 m-2 rounded shadow-md\"\r\n            onClick={() => moveToRead(todo.tno)}\r\n          >\r\n            <div className=\"flex\">\r\n              <div className=\"font-extrabold text-2xl p-2 w-1/12\">\r\n                {todo.tno}\r\n              </div>\r\n              <div className=\"text-1xl m-1 p-2 w-8/12 font-extrabold\">\r\n                {todo.title}\r\n              </div>\r\n              <div className=\"text-1xl m-1 p-2 w-2/10 font-medium\">\r\n                {todo.dueDate}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* ÌéòÏù¥ÏßÄÎÑ§Ïù¥ÏÖò ÏòÅÏó≠ */}\r\n      <PageComponent\r\n        serverData={serverData}\r\n        movePage={moveToList}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListComponent;\r\n","import React from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport ListComponent from '../../components/todo/ListComponent';\r\n\r\nfunction ListPage(props) {\r\n\r\n    return (\r\n        <div className=\"p-4 w-full bg-white\">\r\n            <div className=\"text-3xl font-extrabold\">\r\n                Todo List Page Component\r\n            </div>\r\n            <ListComponent/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListPage;","import { useState } from \"react\"\r\nimport { createSearchParams, useNavigate, useSearchParams } from \"react-router-dom\"\r\n\r\nconst getNum = (param, defaultValue) => {\r\n\r\n    if(!param){\r\n        return defaultValue\r\n    }\r\n\r\n    return parseInt(param)\r\n\r\n}\r\n\r\n\r\n\r\nconst useCustomMove = () => {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [refresh, setRefresh] = useState(false)\r\n\r\n    const [queryParams] = useSearchParams()\r\n\r\n    const page = getNum(queryParams.get('page'), 1)\r\n    const size = getNum(queryParams.get('size'), 10)\r\n    \r\n    //page=3&size=10\r\n    const queryDefault = createSearchParams({page,size}).toString()\r\n\r\n    const moveToList = (pageParam) => {\r\n\r\n        let queryStr = \"\"\r\n        if(pageParam){\r\n            const pageNum = getNum(pageParam.page, 1)\r\n            const sizeNum = getNum(pageParam.size, 10)\r\n\r\n            queryStr = createSearchParams({page:pageNum, size:sizeNum}).toString()\r\n\r\n        }else{\r\n            queryStr = queryDefault\r\n        }\r\n        setRefresh(!refresh)\r\n        navigate({pathname:`../list`, search:queryStr})\r\n\r\n    }\r\n\r\n    const moveToModify = (tno) => {\r\n        navigate({\r\n            pathname:`../modify/${tno}`,\r\n            search:queryDefault\r\n        })\r\n    }\r\n\r\n    const moveToRead = (tno) => {\r\n        navigate({\r\n            pathname:`../read/${tno}`,\r\n            search:queryDefault\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return {moveToList, moveToModify, moveToRead, page, size, refresh}\r\n\r\n}\r\n\r\n\r\nexport default useCustomMove"],"names":["_ref","serverData","movePage","_jsxs","className","children","prev","_jsx","onClick","page","prevPage","_Fragment","pageNumList","map","pageNum","current","next","nextPage","initState","dtoList","pageRequestDTO","totalCount","totalPage","props","size","refresh","moveToList","moveToRead","useCustomMove","setServerData","useState","useEffect","getList","then","data","console","log","todo","tno","title","dueDate","PageComponent","ListComponent","getNum","param","defaultValue","parseInt","navigate","useNavigate","setRefresh","queryParams","useSearchParams","get","queryDefault","createSearchParams","toString","pageParam","queryStr","sizeNum","pathname","search","moveToModify"],"sourceRoot":""}